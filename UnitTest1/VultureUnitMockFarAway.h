
#include "../ExampleAIModule/Source/BuildingManager.h"
#include "../ExampleAIModule/Source/UnitManager.h"
#include "BWAPI.h"
#include <BWAPI.h>
#include "BWAPI\UnitCommand.h"
#include "../include/BWAPI/UnitCommand.h"
#include <../include/BWAPI/UnitCommand.h>
#include "../BWAPI/Unit.h"
#include <../BWAPI/Unit.h>

#pragma once
class VultureUnitMockFarAway : public UnitInterface
{
public:
	VultureUnitMockFarAway();
	~VultureUnitMockFarAway();
	virtual int getID() const override;
	int getDistance(BWAPI::Position target) const;
	virtual bool exists() const override;
	virtual int getReplayID() const override;
	virtual BWAPI::Player getPlayer() const override;
	virtual BWAPI::UnitType getType() const override;
	virtual BWAPI::Position getPosition() const override;
	virtual double getAngle() const override;
	virtual double getVelocityX() const override;
	virtual double getVelocityY() const override;
	virtual int getHitPoints() const override;
	virtual int getShields() const override;
	virtual int getEnergy() const override;
	virtual int getResources() const override;
	virtual int getResourceGroup() const override;
	virtual int getLastCommandFrame() const override;
	virtual BWAPI::UnitCommand getLastCommand() const override;
	virtual BWAPI::Player getLastAttackingPlayer() const override;
	virtual BWAPI::UnitType getInitialType() const override;
	virtual BWAPI::Position getInitialPosition() const override;
	virtual BWAPI::TilePosition getInitialTilePosition() const override;
	virtual int getInitialHitPoints() const override;
	virtual int getInitialResources() const override;
	virtual int getKillCount() const override;
	virtual int getAcidSporeCount() const override;
	virtual int getInterceptorCount() const override;
	virtual int getScarabCount() const override;
	virtual int getSpiderMineCount() const override;
	virtual int getGroundWeaponCooldown() const override;
	virtual int getAirWeaponCooldown() const override;
	virtual int getSpellCooldown() const override;
	virtual int getDefenseMatrixPoints() const override;
	virtual int getDefenseMatrixTimer() const override;
	virtual int getEnsnareTimer() const override;
	virtual int getIrradiateTimer() const override;
	virtual int getLockdownTimer() const override;
	virtual int getMaelstromTimer() const override;
	virtual int getOrderTimer() const override;
	virtual int getPlagueTimer() const override;
	virtual int getRemoveTimer() const override;
	virtual int getStasisTimer() const override;
	virtual int getStimTimer() const override;
	virtual BWAPI::UnitType getBuildType() const override;
	virtual BWAPI::UnitType::list getTrainingQueue() const override;
	virtual BWAPI::TechType getTech() const override;
	virtual BWAPI::UpgradeType getUpgrade() const override;
	virtual int getRemainingBuildTime() const override;
	virtual int getRemainingTrainTime() const override;
	virtual int getRemainingResearchTime() const override;
	virtual int getRemainingUpgradeTime() const override;
	virtual BWAPI::Unit getBuildUnit() const override;
	virtual BWAPI::Unit getTarget() const override;
	virtual BWAPI::Position getTargetPosition() const override;
	virtual BWAPI::Order getOrder() const override;
	virtual BWAPI::Order getSecondaryOrder() const override;
	virtual BWAPI::Unit getOrderTarget() const override;
	virtual BWAPI::Position getOrderTargetPosition() const override;
	virtual BWAPI::Position getRallyPosition() const override;
	virtual BWAPI::Unit getRallyUnit() const override;
	virtual BWAPI::Unit getAddon() const override;
	virtual BWAPI::Unit getNydusExit() const override;
	virtual BWAPI::Unit getPowerUp() const override;
	virtual BWAPI::Unit getTransport() const override;
	virtual BWAPI::Unitset getLoadedUnits() const override;
	virtual BWAPI::Unit getCarrier() const override;
	virtual BWAPI::Unitset getInterceptors() const override;
	virtual BWAPI::Unit getHatchery() const override;
	virtual BWAPI::Unitset getLarva() const override;
	virtual bool hasNuke() const override;
	virtual bool isAccelerating() const override;
	virtual bool isAttacking() const override;
	virtual bool isAttackFrame() const override;
	virtual bool isBeingGathered() const override;
	virtual bool isBeingHealed() const override;
	virtual bool isBlind() const override;
	virtual bool isBraking() const override;
	virtual bool isBurrowed() const override;
	virtual bool isCarryingGas() const override;
	virtual bool isCarryingMinerals() const override;
	virtual bool isCloaked() const override;
	virtual bool isCompleted() const override;
	virtual bool isConstructing() const override;
	virtual bool isDetected() const override;
	virtual bool isGatheringGas() const override;
	virtual bool isGatheringMinerals() const override;
	virtual bool isHallucination() const override;
	virtual bool isIdle() const override;
	virtual bool isInterruptible() const override;
	virtual bool isInvincible() const override;
	virtual bool isLifted() const override;
	virtual bool isMorphing() const override;
	virtual bool isMoving() const override;
	virtual bool isParasited() const override;
	virtual bool isSelected() const override;
	virtual bool isStartingAttack() const override;
	virtual bool isStuck() const override;
	virtual bool isTraining() const override;
	virtual bool isUnderAttack() const override;
	virtual bool isUnderDarkSwarm() const override;
	virtual bool isUnderDisruptionWeb() const override;
	virtual bool isUnderStorm() const override;
	virtual bool isPowered() const override;
	virtual bool isVisible(BWAPI::Player player = nullptr) const override;
	virtual bool isTargetable() const override;
	virtual bool issueCommand(BWAPI::UnitCommand command) override;
	virtual bool canIssueCommand(BWAPI::UnitCommand command, bool checkCanUseTechPositionOnPositions = true, bool checkCanUseTechUnitOnUnits = true, bool checkCanBuildUnitType = true, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canIssueCommandGrouped(BWAPI::UnitCommand command, bool checkCanUseTechPositionOnPositions = true, bool checkCanUseTechUnitOnUnits = true, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canCommand() const override;
	virtual bool canCommandGrouped(bool checkCommandibility = true) const override;
	virtual bool canIssueCommandType(BWAPI::UnitCommandType ct, bool checkCommandibility = true) const override;
	virtual bool canIssueCommandTypeGrouped(BWAPI::UnitCommandType ct, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canTargetUnit(BWAPI::Unit targetUnit, bool checkCommandibility = true) const override;
	virtual bool canAttack(bool checkCommandibility = true) const override;
	virtual bool canAttack(BWAPI::Position target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canAttack(BWAPI::Unit target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canAttackGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canAttackGrouped(BWAPI::Position target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canAttackGrouped(BWAPI::Unit target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canAttackMove(bool checkCommandibility = true) const override;
	virtual bool canAttackMoveGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canAttackUnit(bool checkCommandibility = true) const override;
	virtual bool canAttackUnit(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canAttackUnitGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canAttackUnitGrouped(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canBuild(bool checkCommandibility = true) const override;
	virtual bool canBuild(BWAPI::UnitType uType, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canBuild(BWAPI::UnitType uType, BWAPI::TilePosition tilePos, bool checkTargetUnitType = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canBuildAddon(bool checkCommandibility = true) const override;
	virtual bool canBuildAddon(BWAPI::UnitType uType, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canTrain(bool checkCommandibility = true) const override;
	virtual bool canTrain(BWAPI::UnitType uType, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canMorph(bool checkCommandibility = true) const override;
	virtual bool canMorph(BWAPI::UnitType uType, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canResearch(bool checkCommandibility = true) const override;
	virtual bool canResearch(BWAPI::TechType type, bool checkCanIssueCommandType = true) const override;
	virtual bool canUpgrade(bool checkCommandibility = true) const override;
	virtual bool canUpgrade(BWAPI::UpgradeType type, bool checkCanIssueCommandType = true) const override;
	virtual bool canSetRallyPoint(bool checkCommandibility = true) const override;
	virtual bool canSetRallyPoint(BWAPI::Position target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canSetRallyPoint(BWAPI::Unit target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canSetRallyPosition(bool checkCommandibility = true) const override;
	virtual bool canSetRallyUnit(bool checkCommandibility = true) const override;
	virtual bool canSetRallyUnit(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canMove(bool checkCommandibility = true) const override;
	virtual bool canMoveGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canPatrol(bool checkCommandibility = true) const override;
	virtual bool canPatrolGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canFollow(bool checkCommandibility = true) const override;
	virtual bool canFollow(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canGather(bool checkCommandibility = true) const override;
	virtual bool canGather(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canReturnCargo(bool checkCommandibility = true) const override;
	virtual bool canHoldPosition(bool checkCommandibility = true) const override;
	virtual bool canStop(bool checkCommandibility = true) const override;
	virtual bool canRepair(bool checkCommandibility = true) const override;
	virtual bool canRepair(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canBurrow(bool checkCommandibility = true) const override;
	virtual bool canUnburrow(bool checkCommandibility = true) const override;
	virtual bool canCloak(bool checkCommandibility = true) const override;
	virtual bool canDecloak(bool checkCommandibility = true) const override;
	virtual bool canSiege(bool checkCommandibility = true) const override;
	virtual bool canUnsiege(bool checkCommandibility = true) const override;
	virtual bool canLift(bool checkCommandibility = true) const override;
	virtual bool canLand(bool checkCommandibility = true) const override;
	virtual bool canLand(BWAPI::TilePosition target, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canLoad(bool checkCommandibility = true) const override;
	virtual bool canLoad(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUnloadWithOrWithoutTarget(bool checkCommandibility = true) const override;
	virtual bool canUnloadAtPosition(BWAPI::Position targDropPos, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUnload(bool checkCommandibility = true) const override;
	virtual bool canUnload(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkPosition = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUnloadAll(bool checkCommandibility = true) const override;
	virtual bool canUnloadAllPosition(bool checkCommandibility = true) const override;
	virtual bool canUnloadAllPosition(BWAPI::Position targDropPos, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canRightClick(bool checkCommandibility = true) const override;
	virtual bool canRightClick(BWAPI::Position target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canRightClick(BWAPI::Unit target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickGrouped(BWAPI::Position target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickGrouped(BWAPI::Unit target, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickPosition(bool checkCommandibility = true) const override;
	virtual bool canRightClickPositionGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickUnit(bool checkCommandibility = true) const override;
	virtual bool canRightClickUnit(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickUnitGrouped(bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canRightClickUnitGrouped(BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkCanIssueCommandType = true, bool checkCommandibilityGrouped = true, bool checkCommandibility = true) const override;
	virtual bool canHaltConstruction(bool checkCommandibility = true) const override;
	virtual bool canCancelConstruction(bool checkCommandibility = true) const override;
	virtual bool canCancelAddon(bool checkCommandibility = true) const override;
	virtual bool canCancelTrain(bool checkCommandibility = true) const override;
	virtual bool canCancelTrainSlot(bool checkCommandibility = true) const override;
	virtual bool canCancelTrainSlot(int slot, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canCancelMorph(bool checkCommandibility = true) const override;
	virtual bool canCancelResearch(bool checkCommandibility = true) const override;
	virtual bool canCancelUpgrade(bool checkCommandibility = true) const override;
	virtual bool canUseTechWithOrWithoutTarget(bool checkCommandibility = true) const override;
	virtual bool canUseTechWithOrWithoutTarget(BWAPI::TechType tech, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTech(BWAPI::TechType tech, BWAPI::Position target, bool checkCanTargetUnit = true, bool checkTargetsType = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTech(BWAPI::TechType tech, BWAPI::Unit target = nullptr, bool checkCanTargetUnit = true, bool checkTargetsType = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTechWithoutTarget(BWAPI::TechType tech, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTechUnit(BWAPI::TechType tech, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTechUnit(BWAPI::TechType tech, BWAPI::Unit targetUnit, bool checkCanTargetUnit = true, bool checkTargetsUnits = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTechPosition(BWAPI::TechType tech, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canUseTechPosition(BWAPI::TechType tech, BWAPI::Position target, bool checkTargetsPositions = true, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
	virtual bool canPlaceCOP(bool checkCommandibility = true) const override;
	virtual bool canPlaceCOP(BWAPI::TilePosition target, bool checkCanIssueCommandType = true, bool checkCommandibility = true) const override;
};

